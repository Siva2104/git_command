git config --global:::user.name “Your Name” Set the name that will be attached to your commits and tags.
git config --global


user.email “you@example.com”Set the e-mail address that will be attached to your commitsand tags.
git init [project name]
git clone  <project url>
git status -> status of the repo -> files in staged stage, commited status
git log -> see all the commit message

git add .

##~}} 
###change repository
git remote 
git remote -v -> 
git add origin repo_name 
git push 
>git remote set-url origin (repo_Name_) >> to change the remote_repo
> git push -u "repo_http_linK" master
> git push origin master -> origin remote sever, master is the branch
####ADD a file

git add [file]
Add a file to the staging area. Use. in place of the full file path to add all changed files from the current directory down into the directory tree.
git diff [file] Show changes between working directory and staging area.
git diff --staged [file] Shows any changes between the staging area and the repository.
git checkout -- [file] Discard changes in working directory. This operation is unrecoverable.
git reset <path>...] Revert some paths in the index (or the whole index) to their state in HEAD.
git commit Create a new commit from changes added to the staging area.
The commit must have a message!

#########BRANCH*******************
git branch [-a] List all local branches in repository. With -a: show all branches(with remote).
git branch [branch_name] Create new branch, referencing the current HEAD.
git rebase [branch_name] Apply commits of the current working branch and apply them to the HEAD of [branch] to make the history of your branch more linear.
git checkout [-b] [branch_name]
Switch working directory to the specified branch. With -b: Git will create the specified branch if it does not exist.git merge [branch_name] Join specified [branch_name] branch into your current branch(the one you are on currently).
git branch -d [branch_name]
Remove selected branch, if it is already merged into any other.
-D instead of -d forces deletion.
git commit -m "Your commit message here"
git push origin branch-name
git branch
git checkout origin 'another_branch' //change branch

git remote 
git remote -v // remote repository
